[{"/git/card-gen/card-gen/src/main.js":"1","/git/card-gen/card-gen/src/App.vue":"2","/git/card-gen/card-gen/src/components/CardCreator.vue":"3","/git/card-gen/card-gen/src/components/Card.vue":"4"},{"size":90,"mtime":1720275741882,"results":"5","hashOfConfig":"6"},{"size":403,"mtime":1720276904639,"results":"7","hashOfConfig":"6"},{"size":867,"mtime":1720277166771,"results":"8","hashOfConfig":"6"},{"size":4993,"mtime":1720276736614,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"18wwszs",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},"/git/card-gen/card-gen/src/main.js",[],[],"/git/card-gen/card-gen/src/App.vue",[],[],"/git/card-gen/card-gen/src/components/CardCreator.vue",["21"],"/git/card-gen/card-gen/src/components/Card.vue",["22"],"<script setup lang=\"ts\"></script>\n    <template>\n        <div @click=\"download()\" :id=\"'card-' + unique\" class=\"card\" :style=\"physicalStyle()\">\n            <h3 class=\"card-title\" :style=\"titleStyle()\">{{title}}</h3>\n            <p class=\"card-description\" :style=\"descriptionStyle()\">{{description}}</p>\n            <div class=\"qr-container\">\n                <div :id=\"'qr-card-' + unique\" style=\"image-rendering: pixelated\"></div>\n            </div>\n        </div>\n    </template>\n<style scoped>\n\n\n.card {\n    border: black 2px solid;\n    color: black;\n    flex-basis: 100%;\n    /* justify-content: center; */\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n}\n\n.card :hover {\n    cursor: pointer;\n}\n\n.card-title {\n    white-space: pre-line;\n    font-weight: bold;\n    text-align: center;\n    flex-grow: 1;\n}\n\n.card-description {\n    color:  #333333;\n    font-weight: bold;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n}\n\n.qr-container {\n    display: flex;\n    margin-top: 10px;\n    justify-content: center;\n    align-items: end;\n    flex-grow: 1;\n}\n</style>\n\n\n<script lang=\"ts\">\n\nlet uid = 0;\n\nimport { defineComponent } from 'vue'\nimport * as qrcodegen from \"./qrcodegen\";\n\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\n\nimport * as download from 'downloadjs'\n\n\nfunction hash(str: string) {\n  var hash = 0,\n    i, chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport default defineComponent({\n  name: 'Card',\n  props: ['title', 'description', 'value', 'baseheight', 'basewidth', 'output', 'color'],\n  data() {\n      return {\n          actions: 0,\n          qr: document.createElement(\"canvas\"),\n          outputElem: document.getElementById(\"box1-qr\") as HTMLElement,\n          unique: 0,\n          scale: 1.0294,\n      }\n  },\n  methods: {\n    generateQr()\n    {\n        const errCorLvl: qrcodegen.QrCode.Ecc = qrcodegen.QrCode.Ecc.LOW;  // Error correction level\n        const qr: qrcodegen.QrCode = qrcodegen.QrCode.encodeText(this.value, errCorLvl);  // Make the QR Code symbol\n        qrcodegen.drawCanvas(qr, 2, 1, this.backColor(), \"#000000\", this.appendCanvas('qr-card-' + this.unique));  // Draw it on screen\n        // this.update = !this.update;5\n    },\n    appendCanvas(caption: string): HTMLCanvasElement\n    {\n      if (this.qr) {\n        this.qr.remove() //\n      }\n      this.qr = document.createElement(\"canvas\");\n      this.qr.setAttribute(\"draggable\", \"true\")\n      this.outputElem.appendChild(this.qr);\n      return this.qr;\n    },\n    backColor()\n    {\n        return 'white';\n    },\n    borderColor()\n    {\n        return this.color;\n    },\n    physicalStyle()\n    {\n        return `padding: ${this.margin}in;\n        width: ${this.width}in;\n        padding-bottom: 0.33in;\n        height: ${this.height}in;\n        background-color: ${this.backColor()};\n        border: 20px solid ${this.borderColor()};\n        `\n        // border: 2px solid ${this.borderColor()};\n    },\n    titleStyle()\n    {\n        return `    margin-top: ${0.1*this.scale}in;\n        margin-bottom: ${0.3*this.scale}in;\n        width: ${this.width*3/4}in;\n        flex-grow: 0;\n        font-size: 0.22in;\n        line-height: ${1.25*this.scale};`\n    },\n    descriptionStyle()\n    {\n        return `    \n        margin: 5px;\n        margin-bottom: ${0.3*this.scale}in;\n        width: ${this.width*3/4}in;\n        font-size: 0.17in;\n        line-height: ${1.25*this.scale};`\n    },\n    download()\n    {\n        var self = this;\n        htmlToImage.toPng(document.getElementById('card-' + this.unique) as HTMLElement,\n                    {'canvasWidth': 732*1.11755725191, 'canvasHeight': 1101*1.11755725191})\n            .then(function (dataUrl) {\n                (download as any)(dataUrl, 'card-' + self.title + '-' + self.unique + '-' + hash(self.description + self.value) + '.png');\n            });\n    }\n  },\n  created() {\n    this.unique = uid as number;\n    uid++\n  },\n  mounted() {\n    var node = document.getElementById('box1');\n    this.outputElem = document.getElementById('qr-card-' + this.unique) as HTMLElement\n    this.generateQr();\n\n    // htmlToImage.toPng(node as HTMLElement)\n    // .then(function (dataUrl) {\n    //     var img = new Image();\n    //     img.src = dataUrl;\n    //     // document.body.appendChild(img);\n    // })\n    // .catch(function (error) {\n    //     console.error('oops, something went wrong!', error);\n    // });\n},\nwatch: {\n    output: function (old: boolean, newVal: boolean) {\n        if (newVal) {\n            this.download()\n        }\n    }\n  },\n  computed: {\n    width() : number {\n        return 2.2 * this.scale * 1.039;\n    },\n    height() : number {\n        return 3.43 * this.scale;\n    },\n    margin() {\n        return 0.15 * this.scale;\n    },\n  },\n})\n</script>\n",{"ruleId":"23","severity":2,"message":"24","line":18,"column":8,"nodeType":"25","messageId":"26","endLine":18,"endColumn":12},{"ruleId":null,"fatal":true,"severity":2,"message":"27","line":65,"column":17},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token, expected \",\" (14:17)"]