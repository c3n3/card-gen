{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-54cdc180\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.download()),\n    id: 'card-' + _ctx.unique,\n    class: \"card\",\n    style: _normalizeStyle($options.physicalStyle())\n  }, null, 12 /* STYLE, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","onClick","_cache","$event","$options","download","id","_ctx","unique","class","style","_normalizeStyle","physicalStyle","_hoisted_1"],"sources":["/git/card-gen/card-gen/src/components/Card.vue"],"sourcesContent":["<script setup lang=\"ts\"></script>\n    <template>\n        <div @click=\"download()\" :id=\"'card-' + unique\" class=\"card\" :style=\"physicalStyle()\">\n        </div>\n    </template>\n<style scoped>\n\n\n.card {\n    border: black 2px solid;\n    color: black;\n    flex-basis: 100%;\n    /* justify-content: center; */\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n}\n\n.card :hover {\n    cursor: pointer;\n}\n\n.card-title {\n    white-space: pre-line;\n    font-weight: bold;\n    text-align: center;\n    flex-grow: 1;\n}\n\n.card-description {\n    color:  #333333;\n    font-weight: bold;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n}\n\n.qr-container {\n    display: flex;\n    margin-top: 10px;\n    justify-content: center;\n    align-items: end;\n    flex-grow: 1;\n}\n</style>\n\n\n<script>\n\nlet uid = 0;\n\nimport { defineComponent } from 'vue'\n\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport * as download from 'downloadjs';\n\n\nexport default {\n  name: 'Card',\n  props: ['title', 'description', 'value', 'height', 'width', 'output', 'color'],\n  data() {\n      return {\n          scale: 1.0294,\n      }\n  },\n  methods: {\n    appendCanvas(caption)\n    {\n      if (this.qr) {\n        this.qr.remove() //\n      }\n      this.qr = document.createElement(\"canvas\");\n      this.qr.setAttribute(\"draggable\", \"true\")\n      this.outputElem.appendChild(this.qr);\n      return this.qr;\n    },\n    backColor()\n    {\n        return 'white';\n    },\n    borderColor()\n    {\n        return this.color;\n    },\n    physicalStyle()\n    {\n        return `padding: ${this.margin}in;\n        width: ${this.width}in;\n        padding-bottom: 0.33in;\n        height: ${this.height}in;\n        background-color: ${this.backColor()};\n        border: 20px solid ${this.borderColor()};\n        `\n        // border: 2px solid ${this.borderColor()};\n    },\n    titleStyle()\n    {\n        return `    margin-top: ${0.1*this.scale}in;\n        margin-bottom: ${0.3*this.scale}in;\n        width: ${this.width*3/4}in;\n        flex-grow: 0;\n        font-size: 0.22in;\n        line-height: ${1.25*this.scale};`\n    },\n    descriptionStyle()\n    {\n        return `    \n        margin: 5px;\n        margin-bottom: ${0.3*this.scale}in;\n        width: ${this.width*3/4}in;\n        font-size: 0.17in;\n        line-height: ${1.25*this.scale};`\n    },\n    download()\n    {\n        var self = this;\n        htmlToImage.toPng(document.getElementById('card-' + this.unique),\n                    {'canvasWidth': this.width*1.11755725191, 'canvasHeight': this.height*1.11755725191})\n            .then(function (dataUrl) {\n                (download)(dataUrl, 'card-' + self.title + '-' + self.unique + '-' + '.png');\n            });\n    }\n  },\n  created() {\n    this.unique = uid;\n    uid++\n  },\n  mounted() {\n    var node = document.getElementById('box1');\n    this.outputElem = document.getElementById('qr-card-' + this.unique);\n\n    htmlToImage.toPng(node)\n    .then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        // document.body.appendChild(img);\n    })\n    .catch(function (error) {\n        console.error('oops, something went wrong!', error);\n    });\n},\nwatch: {\n    output: function (old, newVal) {\n        if (newVal) {\n            this.download()\n        }\n    }\n  },\n}\n</script>\n"],"mappings":";;mBAAA;;uBAEQA,mBAAA,CACM;IADAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;IAAKC,EAAE,YAAYC,IAAA,CAAAC,MAAM;IAAEC,KAAK,EAAC,MAAM;IAAEC,KAAK,EAF3EC,eAAA,CAE6EP,QAAA,CAAAQ,aAAa;kCAF1FC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}