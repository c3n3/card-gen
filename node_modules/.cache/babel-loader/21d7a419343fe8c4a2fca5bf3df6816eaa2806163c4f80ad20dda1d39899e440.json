{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-54cdc180\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.download()),\n    id: 'card-' + $data.unique,\n    class: \"card\",\n    style: _normalizeStyle($options.physicalStyle())\n  }, [_createTextVNode(\" This is a card \"), _createElementVNode(\"img\", {\n    src: $props.suitimage\n  }, null, 8 /* PROPS */, _hoisted_2)], 12 /* STYLE, PROPS */, _hoisted_1)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","$event","$options","download","id","$data","unique","class","style","_normalizeStyle","physicalStyle","_createTextVNode","src","$props","suitimage","_hoisted_2","_hoisted_1"],"sources":["/git/card-gen/card-gen/src/components/Card.vue"],"sourcesContent":["<script setup lang=\"ts\"></script>\n    <template>\n        <div>\n            <div @click=\"download()\" :id=\"'card-' + unique\" class=\"card\" :style=\"physicalStyle()\">\n                This is a card\n                <img :src=\"suitimage\" />\n            </div>\n        </div>\n    </template>\n<style scoped>\n\n\n.card {\n    border: black 2px solid;\n    color: black;\n    flex-basis: 100%;\n    /* justify-content: center; */\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n}\n\n.card :hover {\n    cursor: pointer;\n}\n\n.card-title {\n    white-space: pre-line;\n    font-weight: bold;\n    text-align: center;\n    flex-grow: 1;\n}\n\n.card-description {\n    color:  #333333;\n    font-weight: bold;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n}\n\n.qr-container {\n    display: flex;\n    margin-top: 10px;\n    justify-content: center;\n    align-items: end;\n    flex-grow: 1;\n}\n</style>\n\n\n<script>\n\nlet uid = 0;\n\nimport { defineComponent } from 'vue'\n\nimport * as htmlToImage from 'html-to-image';\nimport * as download from 'downloadjs';\n\n\nexport default {\n  name: 'Card',\n  props: ['title', 'description', 'value', 'height', 'width', 'output', 'color', 'suitimage',  'cardval'],\n  data() {\n      return {\n          scale: 1.0294,\n          backColor: \"white\",\n          borderColor: \"black\",\n          margin: 0.1,\n          unique: 1\n      }\n  },\n  methods: {\n    appendCanvas(caption)\n    {\n      if (this.qr) {\n        this.qr.remove()\n      }\n      this.qr = document.createElement(\"canvas\");\n      this.qr.setAttribute(\"draggable\", \"true\")\n      this.outputElem.appendChild(this.qr);\n      return this.qr;\n    },\n    physicalStyle()\n    {\n        return `padding: ${this.margin}in;\n        width: ${this.width}in;\n        padding-bottom: 0.33in;\n        height: ${this.height}in;\n        background-color: ${this.backColor};\n        border: 1px solid ${this.borderColor};\n        `\n        // border: 2px solid ${this.borderColor()};\n    },\n    download()\n    {\n        var self = this;\n        htmlToImage.toPng(document.getElementById('card-' + this.unique),\n        {'canvasWidth': this.width*1.11755725191, 'canvasHeight': this.height*1.11755725191})\n        .then(function (dataUrl) {\n            console.log(dataUrl);\n            // (download)(dataUrl, 'card-' + '-' + self.unique + '-' + '.png');\n        })\n        .catch(function (error) {\n            console.error('oops, something went wrong!', error);\n        });\n    }\n  },\n  created() {\n    this.unique = uid;\n    uid++\n  },\n  mounted() {\n    // var node = document.getElementById('box1');\n    this.outputElem = document.getElementById('qr-card-' + this.unique);\n    console.log(this.suitimage)\n\n    // htmlToImage.toPng(node).then(function (dataUrl) {\n    //     var img = new Image();\n    //     img.src = dataUrl;\n    //     document.body.appendChild(img);\n    // })\n},\nwatch: {\n    output: function (old, newVal) {\n        if (newVal) {\n            this.download()\n        }\n    }\n  },\n}\n</script>\n"],"mappings":";;mBAAA;mBAAA;;uBAEQA,mBAAA,CAKM,cAJFC,mBAAA,CAGM;IAHAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;IAAKC,EAAE,YAAYC,KAAA,CAAAC,MAAM;IAAEC,KAAK,EAAC,MAAM;IAAEC,KAAK,EAH/EC,eAAA,CAGiFP,QAAA,CAAAQ,aAAa;MAH9FC,gBAAA,CAGkG,kBAElF,GAAAb,mBAAA,CAAwB;IAAlBc,GAAG,EAAEC,MAAA,CAAAC;EAAS,wBALpCC,UAAA,E,yBAAAC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}